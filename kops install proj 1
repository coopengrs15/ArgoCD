KOPS HELM INSTALLATION.
===============================================================================================
1. Provision an EC2 instance on AWS - Ubuntu t2-medium security grp with port 8080 open and  
Access server with ssh client mobaxterm

2. Install Docker using these commands (starts with sudo apt update)
	sudo apt install docker.io -y
	sudo systemctl start docker
	sudo systemctl enable docker.service

3, Install start and configure Jenkins
	first Install Java
	
	sudo apt install openjdk-17-jre
	java -version

	curl -fsSL https://pkg.jenkins.io/debian/jenkins.io-2023.key | sudo tee \
  /usr/share/keyrings/jenkins-keyring.asc > /dev/null
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
  https://pkg.jenkins.io/debian binary/ | sudo tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null

sudo apt-get update
sudo apt-get install jenkins
sudo systemctl start jenkins ( to start jenkins)
usermod -aG docker jenkins #(to add jenkins user to docker group so jenkins can execute docker command, docker images will be 		created as jenkins user) then retart docker.
sudo systemctl restart docker.service
sudo echo " jenkins ALL= (ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/jenkins # to add jenkins to sudoer grp so jenkin can perform admin tasks

4. sudo vi /etc/passwd to check jenkins shell if its binbash, if not change false to binbash on root

sudo su - jenkins
5. After configuring jenkins and docker, jenkins can run docker command. ( check with docker ps)

6. install kubectl on jenkins server and configure our kubernetes cluster using kops and attch required IAM role to Jenkins/ and kops server.
	 kops will be used to configure k8s ready cluster. 
	 use bash script and install using the following commands
	 
	 sudo apt update -y
	 sudo apt install wget unzip -y
	 #sudo curl https://s3.amazonaws.com/aws-cli/awscli-bundles.zip -o awscli-bundle.zip
	 #sudo apt install unzip python -y
	 #sudo unzip awscli-bundle.zip
	 #sudo .awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws

Note if the hashed commands dont work, use 
	sudo apt install awscli -y
	aws --version

	 #install kops software
	vi kops.sh
	 sudo wget https://github.com/kubernetes/kops/releases/download/v1.22.0/kops-linux-amd64
	sudo chmod +x kops-linux-amd64
	sudo mv kops-linux-amd64 /usr/local/bin/kops

	#install kubectl
	sudo curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
 	sudo chmod +x ./kubectl
 	sudo mv ./kubectl /usr/local/bin/kubectl

7. Create IAM role on aws console and attach jenkin user so you can run aws commands 
asw s3 ls

8. Make bucket in aws where etcd logfile and secrets / certificate info are gonna be kept
	aws s3 mb s3://jdk8spipe.local   (bucket name=jdk8pipe)

9. Define env variable by vi .bashrc
export NAME=jdk8spipe.k8s.local #cluster name
export KOPS_STATE_STORE=s3://jdk8spipe.local 

	#refresh with 
		source .bashrc
	#check the name of ur cluster with 
		echo $NAME
	#Create a key to access your cluster by creating ssh key and copying the key into the cluster so u can accees the cluster from the jenkins server, if it prompt you to Enter file in which to save the key , just enter 3 times
		ssh-keygen
10. Configure k8s cluster with details such as availability zone and server size for both master and worker nodestating node name an size
		
		kops create cluster --zones us-east-1c --networking weave --master-size t2.medium --master-count 1 --node-size t2.medium --node-count=2 jdk8spipe.k8s.local
		kops get cluster to see the cluster created.


	# copy the sshkey into your cluster to be able to access your kubernetes node from the kops server
		kops create secret --name ${NAME} sshpublickey admin -i ~/.ssh/id_rsa.pub

	#create cluster with
		kops update cluster $ ( clustername ) --yes wait for 10mins

	#validate cluster
		kops validate cluster $(Name) --yes and some other suggested commands


11. kubectl get node
	$Helm
#instal Helm 3
	curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
	chmod 700 get_helm.sh
	ls
 	./get_helm.sh